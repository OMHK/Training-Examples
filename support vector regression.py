# -*- coding: utf-8 -*-
"""support vector regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JufgvMNj1QIAHU7rOgPbTIZq-0yebREV

# Support Vector Regression (SVR)

## Importing the libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Importing the dataset"""

dataset = pd.read_csv('Position_Salaries.csv')
x = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

print(x)

y= y.reshape(len(y),1)

print(y)

"""## Feature Scaling"""

from sklearn.preprocessing import StandardScaler
sc_x = StandardScaler()
sc_y = StandardScaler()
x = sc_x.fit_transform(x)
y = sc_y.fit_transform(y)

print(x)

print(y)

"""## Training the SVR model on the whole dataset"""

from sklearn.svm import SVR
regressor = SVR(kernel = 'rbf')
regressor.fit(x, y)

"""## Predicting a new result"""

sc_y.inverse_transform(regressor.predict(sc_x.transform([[6.5]])).reshape(-1,1))

"""note this previous step nedded revision because SKlearn changed since the  lecture was recorded so to fix that we need to add .reshape(-1,1) after regressor.predict()

## Visualising the SVR results
"""

plt.scatter(sc_x.inverse_transform(x).reshape(-1,1),sc_y.inverse_transform(y).reshape(-1,1),color = 'red')
plt.plot(sc_x.inverse_transform(x).reshape(-1,1) , sc_y.inverse_transform(regressor.predict(x).reshape(-1,1)) ,color = 'blue')
plt.title('Support Vector Regression')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

"""Same as previous part needed to use .reshape(-1:1) to fix the error

## Visualising the SVR results (for higher resolution and smoother curve)
"""

x_grid = np.arange(min(sc_x.inverse_transform(x)), max(sc_x.inverse_transform(x)), 0.1)
x_grid = x_grid.reshape((len(x_grid), 1))
plt.scatter(sc_x.inverse_transform(x), sc_y.inverse_transform(y), color = 'red')
plt.plot(x_grid, sc_y.inverse_transform(regressor.predict(sc_x.transform(x_grid)).reshape(-1,1)), color = 'blue')
plt.title('Truth or Bluff (Support Vector Regression)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

"""Same as before sklearn was updated and now you need to use .reshape(-1,1) after regressor.predict()

"""